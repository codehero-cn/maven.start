<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>cn.codehero.javase</groupId>
  <artifactId>maven.start</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <!-- 以上为pom.xml文件常用头部 -->	

  <name>cmd</name>  
  <!-- package方式:注意jar与war的区别 -->
  <packaging>jar</packaging>  
  <url>http://maven.apache.org</url>	
  <properties>
    <!-- 使用UTF-8读取所有源码及文档，一般都要设置，maven默认是GBK,否则有UTF8中文时会报错 -->
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<!-- 使用UTF-8编码呈现站点html文档，更全便于国际化 -->
	<project.reporting.outputEncodeing>UTF-8</project.reporting.outputEncodeing>
	<!-- 用属性的方法来配置版本 -->
	 <hibernate.version>4.3.8.Final</hibernate.version>
     <spring.version>4.1.4.RELEASE</spring.version>
     <mysql.connector.version>5.1.31</mysql.connector.version>
	
  </properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	
	<build>	
		 <finalName>maven-demo</finalName> <!-- 超级pom中应有默认名字，此名可简化名字 -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
			</plugin>

			<!-- 指定jdk编译器版本 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
  
	<reporting>
		<plugins>
			<!-- javadoc插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
			</plugin>
			
			<!-- 显示源码 -->
			<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jxr-plugin</artifactId>
			<version>2.5</version>  <!-- 20141102版本 -->
			<configuration>
				<aggregate>ture</aggregate> <!-- 当有聚合模块时整合所有的源码 -->
			</configuration>
			</plugin>
			
		</plugins>
	</reporting>
</project>

<!-- ++++++++++++start：spring开发用的依赖，eleven实测可用 ++++++++++++ --> 
		<!-- jstl1.2后据说不要standard包 -->
<!--  	
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
-->
		<!-- 连接数据库要用 -->
<!--  


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>4.2.0.RELEASE</version>
		</dependency>
-->
		<!-- 集成hibernate要用 -->
<!--		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>	
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
        
        <!- DB related dependencies -->
        <!-- 
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		
		<dependencies>
        <dependency>
                <groupId>com.mchange</groupId>
                <artifactId>c3p0</artifactId>
                <version>0.9.2.1</version>
                <scope>compile</scope>
        </dependency>
		
		<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>${mysql.connector.version}</version>
		</dependency>
<!-
		<!- 好象会自动下载依赖common-io -->
<!-- +++++++++++++++++end：spring开发用的依赖，eleven实测可用 +++++++++++++++++--> 

<!-- 为完成 -->
<!-- maven-license-plugin自动为所有Java文件的头部添加许可证声明  -->
<!-- 有拷贝的插件，可以指定排除文件 -->
<!-- 
<build>     
        <outputDirectory>${basedir}/WEB-INF/classes</outputDirectory>

        <resources>
        <resource>
        <directory>src/main/java</directory>
        <includes>
            <include>**/*.xml</include>
            <include>**/*.properties</include>
        </includes>
        </resource>
        <resource>
        <directory>src/main/resources</directory>
        <includes>
        <include>**/*.xml</include>
        <include>**/*.properties</include>
        </includes>
        </resource>
         </resources>   
         
          <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.9</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/WEB-INF/lib</outputDirectory>
              <!- eleven:以下jar包要排除掉，否则会与tomcat冲突 -->
              <!-- 
              <excludeArtifactIds>servlet-api</excludeArtifactIds>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              
            </configuration>
          </execution>
        </executions>
      </plugin>
 -->
 <!-- 
        <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>servlet-api</artifactId>
                <version>6.0.43</version>
        </dependency>   
         
        <dependency>  
                <groupId>org.freemarker</groupId>  
                <artifactId>freemarker</artifactId>  
                <version>2.3.19</version>  
        </dependency>

    <build>     
        <outputDirectory>${basedir}/WEB-INF/classes</outputDirectory>

        <resources>
            <resource>
            <directory>src/main/java</directory>
            <includes>
                <include>**/*.xml</include>
                <include>**/*.properties</include>
            </includes>
            </resource>
            
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                <include>**/*.xml</include>
                <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>    
         
        <plugins>
            <plugin>
            <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.9</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/WEB-INF/lib</outputDirectory>
              <!- eleven:以下jar包要排除掉，否则会与tomcat冲突 -->
              <!-- 
              <excludeArtifactIds>servlet-api</excludeArtifactIds>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              
            </configuration>
          </execution>
        </executions>
      </plugin>
      
        
 -->
